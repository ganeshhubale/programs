Using this swapping two numbers becomes very easy
>>> a, b = b , a
>>> a
54
>>> b
45
To understand how this works, you will have to learn about a data type called tuple. We use comma to create tuple. In
the right hand side we create the tuple (we call this as tuple packing) and in the left hand side we do tuple unpacking
into a new tuple.

--------------------
days = int(input("Enter days: "))
print("Months = %d Days = %d" % (divmod(days, 30)))
The divmod(num1, num2) function returns two values , first is the division of num1 and num2 and in second the
modulo of num1 and num2.

-------------------------

Logical Operators
To do logical AND , OR we use and ,*or* keywords. x and y returns False if x is False else it returns evaluation of y.
If x is True, it returns True.


>>>
4
>>>
1
>>>
-1
>>>
4
1 and 4
1 or 4
-1 or 4
0 or 4
------------------------------
truth value testing

The elegant way to test Truth values is like
if x:
pass

Warning: Donâ€™t do this
if x == True:
pass
------------------------
print(b, end=' ')--> print on one line by space
print(b, sep=' ')--> print to new lline
-------------------------------------

>>> a[0::2]
[1, 223, 'Fedora']
In the last example we used two :(s) , the last value inside the third brackets indicates step. s[i:j:k] means slice of s
from i to j with step k.
-------------------------------------
range() is a buitin class. From the help document
class range(object)
range(stop) -> range object
range(start, stop[, step]) -> range object
Return a virtual sequence of numbers from start to stop by step.

---------------------------

If you are wondering what a data structure is, it is nothing but a way to store
data and having particular methods to retrieve or manipulate it.
------------------------------------
list is mutable data structure where you can add/del/edit the values inside list


1] insert()
2] append()
3] count()
4] remove()
5] reverse()
6] len()
7] extend()
8] sort()
9] del 
10] for x in a:

-----------------
tuple is immutable data structure where you cant add/del/edit the values in tuple


1] type()
2] for x in a:
3] unpack tuple
--------------------
sets are the data structures with no duplicate values


1] add

---------------------
dictionaries are unordered set of key: value pairs where keys are unique.dict are useful to store data for any perticular key and then retrieve them.

You must remember that no mutable object can be a key, that means you can not use a list as a key.
dict() can create dictionaries from tuples of key,value pair.

1] dict[key]='value'
2] del
3] for x, y in data.items():
	print("%s uses %s" % (x, y))
4] setdefault
5] for i, j in enumerate(['a','b','c'])
6] for i, j in zip(a, b):
-------------------
12/10
-----------------
>>> random.random()        # Random float x, 0.0 <= x < 1.0
0.37444887175646646
>>> random.uniform(1, 10)  # Random float x, 1.0 <= x < 10.0
1.1800146073117523
>>> random.randint(1, 10)  # Integer from 1 to 10, endpoints included
7
>>> random.randrange(0, 101, 2)  # Even integer from 0 to 100
26
>>> random.choice('abcdefghij')  # Choose a random element
'c'

>>> items = [1, 2, 3, 4, 5, 6, 7]
>>> random.shuffle(items)
>>> items
[7, 3, 2, 5, 6, 4, 1]

>>> random.sample([1, 2, 3, 4, 5],  3)  # Choose 3 elements
[4, 1, 5]
--------------------
